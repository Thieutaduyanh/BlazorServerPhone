@page "/product/create"
@using BlazorServerApp.Data
@using MySql.Data.MySqlClient
<!-- dieu huong -->
@inject NavigationManager navigationManager

<h3>Create a new product</h3>

<EditForm Model="product" OnValidSubmit="HandleCreateProduct">
    <DataAnnotationsValidator />
    <div class="row">
        <div class="col-6">
            <div class="mb-3">
                <label class="form-label">Name</label>
                <InputText @bind-Value=product.ProductName class="form-control" />
                <ValidationMessage For="() => product.ProductName" />
            </div>

            <div class="mb-3">
                <label class="form-label">Category Id</label>
                <InputNumber @bind-Value=product.CategoryId class="form-control" @oninput="ValidateCategoryId" Min="1"/>
                <ValidationMessage For="() => product.CategoryId" />
            </div>

            <div class="mb-3">
                <label class="form-label">Description</label>
                <InputText @bind-Value=product.Description class="form-control" />
            </div>

            <div class="mb-3">
                <label class="form-label">Status</label>
                <InputSelect @bind-Value=product.IsDeleted class="form-control">
                    <option value="0">Active</option>
                    <option value="1">Deleted</option>
                </InputSelect>
            </div>

            <div class="mb-3">
                <Button Type="ButtonType.Submit" Color="ButtonColor.Success">Save</Button>
                <Button Type="ButtonType.Link" Color="ButtonColor.Primary" To="product">Back</Button>
            </div>
        </div>

        <div class="col-6">
            <div class="mb-3">
                <label class="form-label">Image</label>
                <InputFile class="form-control" OnChange="HanldeSelectedFile"></InputFile>
                @if (avatarUrl != "")
                {
                    <img src="@avatarUrl" style="max-width:500px" />
                }
            </div>
        </div>
    </div>
</EditForm>

@code {
    private Product product = new Product();
    private IBrowserFile selectedFile;
    private string avatarUrl = "";

    private async Task HanldeSelectedFile(InputFileChangeEventArgs e)
    {
        selectedFile = e.File;
        var resizeFile = await e.File.RequestImageFileAsync("image/jpeg", 500, 500);
        var buffer = new byte[resizeFile.Size];
        await resizeFile.OpenReadStream().ReadAsync(buffer);
        avatarUrl = $"data:image/jpeg;base64,{Convert.ToBase64String(buffer)}";
    }

    private async Task HandleCreateProduct()
    {
        try
        {
            if (selectedFile != null)
            {
                await UploadSelectedFile(selectedFile);
            }
            string name = product.ProductName;
            string avatar = product.ProductImage;
            int status = product.IsDeleted;
            int cate_id = product.CategoryId;
            string description = product.Description;

            if (cate_id < 1)
            {
                throw new Exception("Category Id must be greater than 0");
            }
            string SqlInsertUser = $"INSERT INTO product(product_name, product_image, isDeleted, cate_id, description) VALUES('{name}', '{avatar}', {status}, {cate_id}, '{description}')";
            MySqlConnection conn = DBMySQL.GetMySqlConnection();
            conn.Open();
            MySqlCommand cmd = conn.CreateCommand();
            cmd.CommandText = SqlInsertUser;
            cmd.ExecuteNonQuery();
            conn.Close();
            navigationManager.NavigateTo("product");
        }
        catch (Exception ex) { }
    }

    private async Task UploadSelectedFile(IBrowserFile file)
    {
        var fileName = file.Name;
        var folderPath = Path.Combine("wwwroot", "uploads"); //wwwroot/uploads
        var fileParh = Path.Combine(folderPath, fileName); // await : ham dong bo, doi day du thong tin
        Directory.CreateDirectory(folderPath);
        using (var fileStream = new FileStream(fileParh, FileMode.Create))
        {
            await file.OpenReadStream(10000000).CopyToAsync(fileStream);
        }
        product.ProductImage = $"uploads/{fileName}";
    }
    private void ValidateCategoryId(ChangeEventArgs e)
    {
        var value = e.Value.ToString();
        if (int.TryParse(value, out var result) && result < 1)
        {
            product.CategoryId = 1;
        }
    }
}
